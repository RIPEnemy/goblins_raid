<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = "controller";

instance_create(room_width / 2, room_height / 2, camObj);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//обновляем рандом при запуске игры
randomize();

/*
Object types:
- controller
- button
- sprite
- text
- player
- bullet
- enemy
- building
- buff
*/

//set global game settings
global.lang = os_get_language();

if global.lang != "eng"
{
    if global.lang = "ru"
    {
        global.lang = "ru"
    }
    else
    {
        global.lang = "eng";
    }
}

global.os = os_type; //for easy debug
//global.os = os_ios;

if global.os = os_windows || global.os = os_win8native || global.os = os_macosx
{
    window_set_fullscreen(false);
}
else
{
    window_set_fullscreen(true);
}


//set player atributes &amp;&amp; local game settings
ini_open("glRes.ini");
{
    global.gold = ini_read_real("Res","gold",0);
    global.lives = ini_read_real("Res","lives",4);
    
    global.lastScore = ini_read_real("Res","lastScore",0);
    global.topScore = ini_read_real("Res","topScore",0)
    
    global.archerLvl = ini_read_real("Char","archerLvl",1);
    global.archerSpd = ini_read_real("Char","archerSpd",1);
    global.archerASPD = ini_read_real("Char","archerASPD",1);
    
    global.mageLvl = ini_read_real("Char","mageLvl",1);
    global.mageSpd = ini_read_real("Char","mageSpd",1);
    global.mageASPD = ini_read_real("Char","mageASPD",1);
    
    global.builderLvl = ini_read_real("Char","builderLvl",1);
    global.builderSpd = ini_read_real("Char","builderSpd",1);
    global.builderASPD = ini_read_real("Char","builderASPD",1);
    
    global.soundStatus = ini_read_real("Option","sound",0);
    global.musicStatus = ini_read_real("Option","music",0);
}
ini_close();

global.playScore = 0;
global.playerClass = 0;

global.SP_now = 0;
global.SP_max = 160;

room_goto(mainMenu_room);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
