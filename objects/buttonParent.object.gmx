<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>menuBtnSpr</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = "controller";

ini_open("glRes");
{
    status = ini_read_real("Option",object_get_name(id),0);
}
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>guiX = device_mouse_x_to_gui(0);
guiY = device_mouse_y_to_gui(0);

if device_mouse_check_button_released(0,mb_left)
{
    //if guiX &gt; x - 50 &amp;&amp; guiX &lt; x + 50 &amp;&amp; guiY &gt; y - 50 &amp;&amp; guiY &lt; y + 50
    if guiX &gt; x - (id.sprite_width / 2) &amp;&amp; guiX &lt; x + (id.sprite_width / 2) &amp;&amp; guiY &gt; y - (id.sprite_width / 2) &amp;&amp; guiY &lt; y + (id.sprite_width / 2)
    {
        alarm[0] = 1;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(object_get_name(object_index))
{
    case "playBtnObj": draw_sprite(playBtnSpr_empty,0,x,y); break;
    case "musicBtnObj":
                        if status = 0
                        {
                            draw_sprite(menuBtnSpr,0,x,y);
                        } 
                        else
                        {
                            draw_sprite(menuBtnSpr,1,x,y);
                        }
                        
                        break;
                        
    case "soundBtnObj": 
                        if status = 0
                        {
                            draw_sprite(menuBtnSpr,0,x,y);
                        } 
                        else
                        {
                            draw_sprite(menuBtnSpr,1,x,y);
                        }
                        
                        break;
                        
    case "backBtnObj": draw_sprite(menuBtnSpr,0,x,y); break;
    case "randomBtnObj": draw_sprite(menuBtnSpr,0,x,y); break;
    case "chooseArcherBtnObj": draw_sprite(menuBigBtnSpr,0,x,y); break;
    case "chooseMageBtnObj": draw_sprite(menuBigBtnSpr,0,x,y); break;
    case "chooseBuilderBtnObj": draw_sprite(menuBigBtnSpr,0,x,y); break;
    case "pauseObj": draw_sprite(menuBtnSpr,0,x,y); break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
